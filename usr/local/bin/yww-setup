#! /usr/bin/env bash
# 
# i18n nilsonmorales
# l10n nilsonmorales
trap 'ywtray_close ; s=$?; echo >&2 "$0: Exit code on line "$LINENO": $BASH_COMMAND" ; exit $s ;' ERR EXIT SIGTERM SIGKILL
set -Ee
set -u 
set -o errtrace
set -x
export TEXTDOMAIN=yww-setup
export OUTPUT_CHARSET=UTF-8
source "/root/ywtray/usr/local/bin/yww-functions"
# VARIABLES 
location=''                   # Town, Country OR State      needed by https://geocode.maps.co
declare -a weather_data       # array to store data variables requested to open-meteo
declare -a location_and_units # array to store location and weather preferred units
declare -a request_lat_lon    # array to store the latitude and longitude pair for the location
latitude=''                   #                             needed by https://api.open-meteo.com/v1/forecast
longitude=''                  #                             needed by https://api.open-meteo.com/v1/forecast
current_weather='true'        #                             needed by https://api.open-meteo.com/v1/forecast
temp_unit=''                  #                             needed by https://api.open-meteo.com/v1/forecast
windspeed_unit=''             # kmh, ms, mph, kn            needed by https://api.open-meteo.com/v1/forecast
timeformat='iso8601'          #                             needed by https://api.open-meteo.com/v1/forecast
timezone="$(date "+%Z")"      #                             needed by https://api.open-meteo.com/v1/forecast
wicon=''                      # weather icon indicator name
wtext=''                      # current weather text description as privided by open-meteo.com
icons_dir="/opt/yww-icons"    # weather icons location
#epoch_time                   # used in function weather_icon_descriptor, a local variable declared
temperature_suffix=''         # suffix F or C to be written in the tooltip
wind_speed_suffix=''          # suffix mph, kn to be written in the tooltip
pid_tray=''                   # process id of the yad dialog icon notifier



function ywtray_close () {
    
    rm -f "${named_pipe}"	
    kill -USR1 "$YAD_PID"
    kill -9 "$(ps aux | grep "yww-setup" | awk 'NR==1{print $2}')"
    kill -9 "$(ps aux | grep "yww-start" | awk 'NR==1{print $2}')"
}

export -f ywtray_close



export named_pipe="$(mktemp -u "/tmp/ywtrayXXXXXXXXXXXXX")"



mkfifo "${named_pipe}"
exec 3<> "${named_pipe}"
#function on_exit (){
    
#    exec 3<> "${named_pipe}" 
    
#    echo "quit" >&3
    
#    rm -f "${named_pipe}"
#}
source "/root/ywtray/.config/ywtray/ywtray.conf"
weather_data=($(curl -s -k "https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=${current_weather}&windspeed_unit=${windspeed_unit}&temperature_unit=${temp_unit}&timezone=${timezone}&daily=sunset,sunrise" | weather_data_parser))


weather_icon_descriptor


yad --notification \
--listen \
--text="$(printf ''$(gettext 'Place:')' %s\n%s'$(gettext '\nTemperature:')' %s %s'$(gettext '\nWind')' '$(gettext 'Speed:')' %s %s'$(gettext '\nWind')' '$(gettext 'Direction:')' %s' "${location}" "${wtext}" "${weather_data[0]}" "${temperature_suffix}" "${weather_data[1]}" "${wind_speed_suffix}" "${weather_data[2]} °")" \
--image "${icons_dir}/${wicon}" \
--menu="Quit!bash -c ywtray_close!exit" \
--no-middle \
--command=":" \
--icon-size 46 <&3 &

pid_tray=$!



while true ; do


    sleep 10s
    
    weather_data=($(curl -s -k "https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=${current_weather}&windspeed_unit=${windspeed_unit}&temperature_unit=${temp_unit}&timezone=${timezone}&daily=sunset,sunrise" | weather_data_parser))

    weather_icon_descriptor
    
    echo "icon:${icons_dir}/${wicon}" > "${named_pipe}"
    
    echo "tooltip:$(gettext Place:) ${location}\n${wtext}\n$(gettext Temperature:) ${weather_data[0]} ${temperature_suffix}\n$(gettext Wind Speed:) ${weather_data[1]} ${wind_speed_suffix}\n$(gettext Wind Direction:) ${weather_data[2]} °" >> "${named_pipe}"
    

done

exit 0
