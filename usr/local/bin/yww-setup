#!/usr/bin/env bash
#By Tenoch 
#i18n nilsonmorales
#l10n nilsonmorales
trap 'rm -f $named_pipe; printf "\n" ; kill -9 $pid_tray ; s=$?; echo >&2 "$0: Exit code on line "$LINENO": $BASH_COMMAND" ; exit $s ;' ERR EXIT SIGTERM SIGKILL
set -euo pipefail
set -x
export TEXTDOMAIN=yww-setup
export OUTPUT_CHARSET=UTF-8


# parses place, latitude and longitude options from json format into something more human readable
function lat_lon_parser (){

    
    awk '
    
        BEGIN{

            RS="[]\"],\""
    
            ORS="\n"
    
            FS="\":\""
    
            OFS=" "
    
        }

        /lat":/{f=1}


        f==1{

            $1=$1

            printf("%s ", $2)
    
        }

        /display_name/{


            f=0    
  
            print ""

        }
    
    '
}

# extracts relevant values from the call to the weather api, and presents them into a bash array friedly format.
function weather_data_parser () {
    
    awk '   
    
        BEGIN{

            RS="({\")|(,\")"
    
            ORS="\n"
    
            FS="(\":)|(\":\\[\")|(\")"

        }   

        /temperature/{awk_temperature=$2}
        /windspeed/ {awk_windspeed=$2}
        /winddirection/{awk_winddirection=$2}
        /weathercode/{awk_weathercode=$2}
        /sunset/{awk_sunset=$2}
        /sunrise/{awk_sunrise=$2}
        
        END{
    
        printf("%s %s %s %s %s %s", awk_temperature , awk_windspeed, awk_winddirection, awk_weathercode , awk_sunset, awk_sunrise)    
    
        }
    

        '
}

# translates the weather api's code numbers to text, and determines icons to use 
function weather_icon_descriptor () {

    local epoch_time="$(date "+%s")" 

    if [[ "${epoch_time}" -ge "$(date -d "${weather_data[5]}" "+%s")" &&  "${epoch_time}" -le "$(date -d "${weather_data[4]}" +%s)" ]] ; then  


    # Daytime icons and short weather descriptions

        case "${weather_data[3]}" in

        0)
            wicon="clear-day.svg"
            wtext="$(gettext 'Clear sky')"
            ;;

        1)
            wicon="clear-day.svg"
            wtext="$(gettext 'Mainly clear')"
            ;;
  
        2)
            wicon="cloudy-1-day.svg"
            wtext="$(gettext 'Partly cloudy')"
            ;;

        3)
            wicon="cloudy.svg"
            wtext="$(gettext 'Overcast')"
            ;;

        45)
            wicon="fog.svg"
            wtext="$(gettext 'Fog')"
            ;;

        48)
            wicon="fog.svg"
            wtext="$(gettext 'Rime fog')"
            ;;

        51)
            wicon="rainy-1.svg"
            wtext="$(gettext 'Light drizzle')"
            ;;
  
        53)
            wicon="rainy-1.svg"
            wtext="$(gettext 'Moderate drizzle')"
            ;;

        55)
            wicon="rainy-1.svg"
            wtext="$(gettext 'Intense drizzle')"
            ;;
    
        56)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Light freezing drizzle')"
            ;;

        57)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Intense freezing drizzle')"
            ;;
    
        61)
            wicon="rainy-1-day.svg"
            wtext="$(gettext 'Slight rain')"
            ;;
    
        63)
            wicon="rainy-2-day.svg"
            wtext="$(gettext 'Moderate rain')"
            ;;
    
        65)
            wicon="rainy-3-day.svg"
            wtext="$(gettext 'Intense rain')"
            ;;
    
        66)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Light freezing rain')"
            ;;

        67)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Intense freezing rain')"
            ;;
    
        71)
            wicon="snowy-1-day.svg"
            wtext="$(gettext 'Slight snow fall')"
            ;;

        73)
            wicon="snowy-2-day.svg"
            wtext="$(gettext 'Moderate snow fall')"
            ;;
    
        75)
            wicon="snowy-3-day.svg"
            wtext="$(gettext 'Intense snow fall')"
            ;;

        77)
            wicon="snow-and-sleet.svg"
            wtext="$(gettext 'Snow grains')"
            ;;

        80)
            wicon="rainy-1.svg"
            wtext="$(gettext 'Slight rain showers')"
            ;;
    
        81)
            wicon="rainy-2.svg"
            wtext="$(gettext 'Moderate rain showers')"
            ;;

        82)
            wicon="rainy-3.svg"
            wtext="$(gettext 'Intense rain showers')"
            ;;

        85)
            wicon="snowy-1.svg"
            wtext="$(gettext 'Slight snow showers')"
            ;;

        86)
            wicon="snowy-3.svg"
            wtext="$(gettext 'Heavy snow showers')"
            ;;

        95)
            wicon="scattered-thunderstorms.svg"
            wtext="$(gettext 'Thunderstorm')"
            ;;
    
        96)
            wicon="thunderstorms.svg"
            wtext="$(gettext 'Thunderstorm with slight hail')"
            ;;

        99)
            wicon="thunderstorms.svg"
            wtext="$(gettext 'Thunderstorm with heavy hail')"
            ;;


        *)
            wicon="default-no.svg"
            wtext="$(gettext 'unknown')"
            ;;
    
        esac
# Night Time Icons    
    else
        
        case "${weather_data[3]}" in

        0)
            wicon="clear-night.svg"
            wtext="$(gettext 'Clear sky')"
            ;;

        1)
            wicon="clear-night.svg"
            wtext="$(gettext 'Mainly clear')"
            ;;
  
        2)
            wicon="cloudy-2-night.svg"
            wtext="$(gettext 'Partly cloudy')"
            ;;

        3)
            wicon="cloudy.svg"
            wtext="$(gettext 'Overcast')"
            ;;

        45)
            wicon="fog.svg"
            wtext="$(gettext 'Fog')"
            ;;

        48)
            wicon="frost-night.svg"
            wtext="$(gettext 'Rime fog')"
            ;;

        51)
            wicon="rainy-1-night.svg"
            wtext="$(gettext 'Light drizzle')"
            ;;
  
        53)
            wicon="rainy-1-night.svg"
            wtext="$(gettext 'Moderate drizzle')"
            ;;

        55)
            wicon="rainy-1-night.svg"
            wtext="$(gettext 'Intense drizzle')"
            ;;
    
        56)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Light freezing drizzle')"
            ;;

        57)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Intense freezing drizzle')"
            ;;
    
        61)
            wicon="rainy-1-night.svg"
            wtext="$(gettext 'Slight rain')"
            ;;
    
        63)
            wicon="rainy-2-night.svg"
            wtext="$(gettext 'Moderate rain')"
            ;;
    
        65)
            wicon="rainy-3-night.svg"
            wtext="$(gettext 'Intense rain')"
            ;;
    
        66)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Light freezing rain')"
            ;;

        67)
            wicon="rain-and-sleet.svg"
            wtext="$(gettext 'Intense freezing rain')"
            ;;
    
        71)
            wicon="snowy-1-night.svg"
            wtext="$(gettext 'Slight snow fall')"
            ;;

        73)
            wicon="snowy-2-night.svg"
            wtext="$(gettext 'Moderate snow fall')"
            ;;
    
        75)
            wicon="snowy-3-night.svg"
            wtext="$(gettext 'Intense snow fall')"
            ;;

        77)
            wicon="snow-and-sleet.svg"
            wtext="$(gettext 'Snow grains')"
            ;;

        80)
            wicon="rainy-1-night.svg"
            wtext="$(gettext 'Slight rain showers')"
            ;;
    
        81)
            wicon="rainy-2-night.svg"
            wtext="$(gettext 'Moderate rain showers')"
            ;;

        82)
            wicon="rainy-3-night.svg"
            wtext="$(gettext 'Intense rain showers')"
            ;;

        85)
            wicon="snowy-1-night.svg"
            wtext="$(gettext 'Slight snow showers')"
            ;;

        86)
            wicon="snowy-3-night.svg"
            wtext="$(gettext 'Heavy snow showers')"
            ;;

        95)
            wicon="scattered-thunderstorms-night.svg"
            wtext="$(gettext 'Thunderstorm')"
            ;;
    
        96)
            wicon="hail.svg"
            wtext="$(gettext 'Thunderstorm with slight hail')"
            ;;

        99)
            wicon="hail.svg"
            wtext="$(gettext 'Thunderstorm with heavy hail')"
            ;;


        *)
            wicon="default-no.svg"
            wtext="$(gettext 'unavailable')"
            ;;
    
        esac       

fi

}

function set_wind_suffix (){

         case "${windspeed_unit}" in
         
         kmh)
            wind_speed_suffix="km/h"
            ;;

         ms)
            wind_speed_suffix="m/s"
            ;;
        
         mph)
            wind_speed_suffix="mph"
            ;;
        
         kn)
            wind_speed_suffix="$(gettext 'knots')"
            ;;

         *)
            wind_speed_suffix="unavailable"
            ;;
    
        esac   
    
}

function set_temperature_suffix (){

        case "${temp_unit}" in
        celsius)
            temperature_suffix="°C"
            ;;
        
        fahrenheit) 
            temperature_suffix="°F"
            ;;
        *)
            temperature_suffix="unknown"
            ;;
    
        esac
    
}
# VARIABLES 
location=''                   # Town, Country OR State      needed by https://geocode.maps.co
declare -a weather_data       # array to store data variables requested to open-meteo
declare -a location_and_units # array to store location and weather preferred units
declare -a request_lat_lon    # array to store the latitude and longitude pair for the location
latitude=''                   #                             needed by https://api.open-meteo.com/v1/forecast
longitude=''                  #                             needed by https://api.open-meteo.com/v1/forecast
current_weather='true'        #                             needed by https://api.open-meteo.com/v1/forecast
temp_unit=''                  #                             needed by https://api.open-meteo.com/v1/forecast
windspeed_unit=''             # kmh, ms, mph, kn            needed by https://api.open-meteo.com/v1/forecast
timeformat='iso8601'          #                             needed by https://api.open-meteo.com/v1/forecast
timezone="$(date "+%Z")"      #                             needed by https://api.open-meteo.com/v1/forecast
wicon=''                      # weather icon indicator name
wtext=''                      # current weather text description as privided by open-meteo.com
icons_dir="/opt/yww-icons"    # weather icons location
#epoch_time                   # used in function weather_icon_descriptor, a local variable declared
temperature_suffix=''         # suffix F or C to be written in the tooltip
wind_speed_suffix=''          # suffix mph, kn to be written in the tooltip
pid_tray=''                   # process id of the yad dialog icon notifier
named_pipe="$(mktemp -u "/tmp/ywtrayXXXXXXXXXXXXX")"

mkfifo "${named_pipe}"
exec 3<> "${named_pipe}"

oldifs="${IFS}"

IFS=$'|'

location_and_units=($(yad \
--title="$(gettext 'ywtray settings')" \
--image="${icons_dir}/equator.svg" \
--center \
--text="$(gettext 'Type a place, and select your measuring units. Retrieving latitude and longitude coordinates may take a few seconds')" \
--width=460 \
--height=220 \
--window-icon="${icons_dir}"/cloudy-1-day.svg \
--form \
--field="$(gettext 'Location:CE')" \
--field="$(gettext 'Temperature Unit:CB')" \
--field="$(gettext 'Wind Speed Unit:CB')" '' '^celsius!fahrenheit' '^kmh!ms!mph!kn'))

location="${location_and_units[0]}"

temp_unit="${location_and_units[1]}"

windspeed_unit="${location_and_units[2]}"

IFS="${oldifs}"

set_temperature_suffix

set_wind_suffix


# REQUEST lat log of a place to https://geocode.maps.co

request_lat_lon=($(curl -k "https://geocode.maps.co/search?q=${location}" | \
    lat_lon_parser - | \
    yad --list \
     --title="$(gettext 'ywtray - location selection')" \
     --image="${icons_dir}/location.svg" \
     --image-on-top \
     --center \
     --width=600 \
     --height=340 \
     --text-align=center \
     --text="$(gettext 'Choose the place closest to you')" \
     --window-icon="${icons_dir}/cloudy-1-day.svg" \
     --column=Locations:TEXT))

latitude="${request_lat_lon[0]}"
longitude="${request_lat_lon[1]}"





# REQUEST current weather to https://api.open-meteo.com/v1/forecast
#       and assign it to an array, element 1 Temperature, element 2 Wind Speed, element 3 Wind Direction, element 4 Weather Code, element 5 sunset, element 6 sunrise
weather_data=($(curl -k "https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=${current_weather}&windspeed_unit=${windspeed_unit}&temperature_unit=${temp_unit}&timezone=${timezone}&daily=sunset,sunrise" | weather_data_parser))

weather_icon_descriptor

yad --notification \
--listen \
--text="$(printf ''$(gettext 'Place:')' %s\n%s'$(gettext '\nTemperature:')' %s %s'$(gettext '\nWind')' '$(gettext 'Speed:')' %s %s'$(gettext '\nWind')' '$(gettext 'Direction:')' %s' "${location}" "${wtext}" "${weather_data[0]}" "${temperature_suffix}" "${weather_data[1]}" "${wind_speed_suffix}" "${weather_data[2]} °")" \
--image "${icons_dir}/${wicon}" \
--icon-size 46 <&3 &

pid_tray=$!

while true ; do


    sleep 27m
    
    weather_data=($(curl -k "https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=${current_weather}&windspeed_unit=${windspeed_unit}&temperature_unit=${temp_unit}&timezone=${timezone}&daily=sunset,sunrise" | weather_data_parser))

    weather_icon_descriptor
    
    echo "icon:${icons_dir}/${wicon}" > "${named_pipe}"
    
    echo "tooltip:$(gettext Place:) ${location}\n$(gettext Temperature:) ${weather_data[0]} ${temperature_suffix}\n$(gettext Wind Speed:) ${weather_data[1]} ${wind_speed_suffix}\n$(gettext Wind Direction:) ${weather_data[2]} °" >> "${named_pipe}"
    

done

exit 0
